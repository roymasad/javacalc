/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.roymassaad.calculatormavenproject;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import javax.swing.JOptionPane;


/**
 *
 * @author roymassaad
 */
public class Calculator extends javax.swing.JFrame {

    // buffer to hold hidden secondary/previous operand
    private String buffer;
    
    // upcoming operator to use
    private String operator;
    
    // current displayed operand/result
    private String operand;
    
    private Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
    
    
    /**
     * Creates new form NewJFrame
     */
    public Calculator() {

        initComponents();
        
        buffer = "";
        operator = "";
        operand = "";
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AboutButton = new javax.swing.JButton();
        button8 = new javax.swing.JButton();
        button7 = new javax.swing.JButton();
        button9 = new javax.swing.JButton();
        button6 = new javax.swing.JButton();
        button5 = new javax.swing.JButton();
        buton4 = new javax.swing.JButton();
        button1 = new javax.swing.JButton();
        button2 = new javax.swing.JButton();
        button3 = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        button0 = new javax.swing.JButton();
        equalButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        substractButton = new javax.swing.JButton();
        multiplyButton = new javax.swing.JButton();
        divideButton = new javax.swing.JButton();
        resultLabel = new javax.swing.JLabel();
        dotButton = new javax.swing.JButton();
        copyButton = new javax.swing.JButton();
        pasteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");
        setBackground(new java.awt.Color(204, 204, 204));
        setLocation(new java.awt.Point(200, 200));
        setName("Calculatorframe"); // NOI18N
        setPreferredSize(new java.awt.Dimension(444, 500));
        setResizable(false);

        AboutButton.setText("About");
        AboutButton.setFocusable(false);
        AboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutButtonActionPerformed(evt);
            }
        });

        button8.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        button8.setText("8");
        button8.setFocusable(false);
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        button7.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        button7.setText("7");
        button7.setFocusable(false);
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        button9.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        button9.setText("9");
        button9.setFocusable(false);
        button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button9ActionPerformed(evt);
            }
        });

        button6.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        button6.setText("6");
        button6.setFocusable(false);
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        button5.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        button5.setText("5");
        button5.setFocusable(false);
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        buton4.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        buton4.setText("4");
        buton4.setFocusable(false);
        buton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton4ActionPerformed(evt);
            }
        });

        button1.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        button1.setText("1");
        button1.setFocusable(false);
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button2.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        button2.setText("2");
        button2.setFocusable(false);
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        button3.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        button3.setText("3");
        button3.setFocusable(false);
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(153, 204, 255));
        clearButton.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        clearButton.setText("C");
        clearButton.setFocusable(false);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        button0.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        button0.setText("0");
        button0.setFocusable(false);
        button0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button0ActionPerformed(evt);
            }
        });

        equalButton.setBackground(new java.awt.Color(153, 204, 255));
        equalButton.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        equalButton.setText("=");
        equalButton.setFocusable(false);
        equalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalButtonActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(153, 204, 255));
        addButton.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        addButton.setText("+");
        addButton.setFocusable(false);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        substractButton.setBackground(new java.awt.Color(153, 204, 255));
        substractButton.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        substractButton.setText("-");
        substractButton.setFocusable(false);
        substractButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                substractButtonActionPerformed(evt);
            }
        });

        multiplyButton.setBackground(new java.awt.Color(153, 204, 255));
        multiplyButton.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        multiplyButton.setText("*");
        multiplyButton.setFocusable(false);
        multiplyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyButtonActionPerformed(evt);
            }
        });

        divideButton.setBackground(new java.awt.Color(153, 204, 255));
        divideButton.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        divideButton.setText("/");
        divideButton.setFocusable(false);
        divideButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideButtonActionPerformed(evt);
            }
        });

        resultLabel.setBackground(java.awt.Color.white);
        resultLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        resultLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        resultLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        resultLabel.setOpaque(true);

        dotButton.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        dotButton.setText(".");
        dotButton.setFocusable(false);
        dotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotButtonActionPerformed(evt);
            }
        });

        copyButton.setText("Copy");
        copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButtonActionPerformed(evt);
            }
        });

        pasteButton.setText("Paste");
        pasteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resultLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(button0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(substractButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(multiplyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(divideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AboutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(equalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(copyButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pasteButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(resultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(copyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(substractButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pasteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(multiplyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(divideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AboutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(equalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutButtonActionPerformed
        
        String message = "Java Swing Maven Calculator";
        String title = "About";
        JOptionPane.showMessageDialog(this, message, title, JOptionPane.INFORMATION_MESSAGE);
        
        //System.exit(0);  
    }//GEN-LAST:event_AboutButtonActionPerformed

    private void button0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button0ActionPerformed

        // if buffer is empty and there is a pending operator 
        // (a transit state, as a previous calculation has been just done and is currently displaying its result in the operand)   
        // flush/move current operand to the buffer and set again the operand with this digit (no append)
        
        // otherwise append digit to existing operand value 
        // (very first start of calculation or after transit state filling in second operand digits for the upcoming operation)
        
        
        if (buffer == "" && operator != "") {

            buffer = operand;
            operand = "0";
        }
        else 
            if (operand.length() <= 15) operand += "0";     // max 15 digits

        resultLabel.setText(operand);   
    }//GEN-LAST:event_button0ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        
        
        if (buffer == "" && operator != "") {

            buffer = operand;
            operand = "1";
        }
        else 
            if (operand.length() <= 15) operand += "1";

        resultLabel.setText(operand);
    }//GEN-LAST:event_button1ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed

        
        if (buffer == "" && operator != "") {

            buffer = operand;
            operand = "2";
        }
        else 
            if (operand.length() <= 15) operand += "2";

        resultLabel.setText(operand); 
    }//GEN-LAST:event_button2ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed

        
        if (buffer == "" && operator != "") {

            buffer = operand;
            operand = "3";
        }
        else 
            if (operand.length() <= 15) operand += "3";

        resultLabel.setText(operand);        
        
    }//GEN-LAST:event_button3ActionPerformed

    private void buton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton4ActionPerformed

        
        if (buffer == "" && operator != "") {

            buffer = operand;
            operand = "4";
        }
        else 
            if (operand.length() <= 15) operand += "4";

        resultLabel.setText(operand);      
    }//GEN-LAST:event_buton4ActionPerformed

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
        
        
        if (buffer == "" && operator != "") {

            buffer = operand;
            operand = "5";
        }
        else 
            if (operand.length() <= 15) operand += "5";

        resultLabel.setText(operand);      
    }//GEN-LAST:event_button5ActionPerformed

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed

        
        if (buffer == "" && operator != "") {

            buffer = operand;
            operand = "6";
        }
        else 
            if (operand.length() <= 15) operand += "6";

        resultLabel.setText(operand);    
    }//GEN-LAST:event_button6ActionPerformed

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed

        
        if (buffer == "" && operator != "") {

            buffer = operand;
            operand = "7";
        }
        else 
            if (operand.length() <= 15) operand += "7";

        resultLabel.setText(operand);  
    }//GEN-LAST:event_button7ActionPerformed

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed

        
        if (buffer == "" && operator != "") {

            buffer = operand;
            operand = "8";
        }
        else 
            if (operand.length() <= 15) operand += "8";

        resultLabel.setText(operand);       
    }//GEN-LAST:event_button8ActionPerformed

    private void button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button9ActionPerformed

        
        if (buffer == "" && operator != "") {

            buffer = operand;
            operand = "9";
        }
        else 
            if (operand.length() <= 15) operand += "9";

        resultLabel.setText(operand);   
    }//GEN-LAST:event_button9ActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        
        operand = "";
        operator = "";
        buffer = "";
        
        resultLabel.setText(operand);        // TODO add your handling code here:
    }//GEN-LAST:event_clearButtonActionPerformed

    private void dotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dotButtonActionPerformed
        
        
        // add dot only when approriate
        if (!operand.contains(".") && operand.length() >0) {
            
            if (operand.length() <= 14) operand += ".";
        
            resultLabel.setText(operand);      
        }    

    }//GEN-LAST:event_dotButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
             
        // finsish any previous pending buffer/operand/operator operation
        calculate();
        
        // and set the new operator
        operator = "+";
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void substractButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_substractButtonActionPerformed
        
        // finsish any previous pending buffer/operand/operator operation
        calculate();
        
        // and set the new operator
        operator = "-";
    }//GEN-LAST:event_substractButtonActionPerformed

    private void multiplyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyButtonActionPerformed
            
        // finsish any previous pending buffer/operand/operator operation
        calculate();
        
        // and set the new operator
        operator = "*";      
    }//GEN-LAST:event_multiplyButtonActionPerformed

    private void divideButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideButtonActionPerformed
        
        // finsish any previous pending buffer/operand/operator operation
        calculate();
        
        // and set the new operator
        operator = "/";        
        
    }//GEN-LAST:event_divideButtonActionPerformed

    private void equalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalButtonActionPerformed
        
        calculate();        // do any pending buffer/operand/operator operation
        operator = "";      // set next operand to none
    }//GEN-LAST:event_equalButtonActionPerformed

    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed
        String text = resultLabel.getText();
        copyToClipboard(text);        // TODO add your handling code here:
    }//GEN-LAST:event_copyButtonActionPerformed

    private void pasteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteButtonActionPerformed
        Transferable clipboardContent = clipboard.getContents(null);
        if (clipboardContent != null && clipboardContent.isDataFlavorSupported(DataFlavor.stringFlavor)) {
            try {
                String text = (String) clipboardContent.getTransferData(DataFlavor.stringFlavor);
                
                if (isValidNumber(text)) {
                    
                    buffer = "";
                    operator = "";
                    operand = text;
                    resultLabel.setText(operand); 
                    
                } else {
                    
                }
            } catch (UnsupportedFlavorException | IOException ex) {
                
            }
        }        
    }//GEN-LAST:event_pasteButtonActionPerformed

    private void calculate(){
        
        // init used variables
        double calc = 0;
        if (buffer == "") buffer = "0";
        
        
        if (operator == "+") {
          
            // add operand to buffer
            calc = Double.parseDouble(buffer) + Double.parseDouble(operand);
        
            // set operand to the new result
            operand = Double.toString(calc);
            // update displayed label
            resultLabel.setText(operand);
            
            //flush buffer
            buffer = "";
            
        }
        
        if (operator == "-") {
          
            // add operand to buffer
            calc = Double.parseDouble(buffer) - Double.parseDouble(operand);
        
            // set operand to the new result
            operand = Double.toString(calc);
            // update displayed label
            resultLabel.setText(operand);
            
            //flush buffer
            buffer = "";
            
        }

        if (operator == "*") {
          
            // add operand to buffer
            calc = Double.parseDouble(buffer) * Double.parseDouble(operand);
        
            // set operand to the new result
            operand = Double.toString(calc);
            // update displayed label
            resultLabel.setText(operand);
            
            //flush buffer
            buffer = "";
            
        }    
        
        if (operator == "/") {
          
            // add operand to buffer
            calc = Double.parseDouble(buffer) / Double.parseDouble(operand);
        
            // set operand to the new result
            operand = Double.toString(calc);
            // update displayed label
            resultLabel.setText(operand);
            
            //flush buffer
            buffer = "";
            
        }
        
        if (buffer == "0") buffer = "";
     
    }
    
    private void copyToClipboard(String text) {
        
        StringSelection selection = new StringSelection(text);
        clipboard.setContents(selection, null);
    }
    
    private boolean isValidNumber(String text) {
        try {
            Double.parseDouble(text);
            return true;
        } catch (NumberFormatException e) {
            return false;
    }
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AboutButton;
    private javax.swing.JButton addButton;
    private javax.swing.JButton buton4;
    private javax.swing.JButton button0;
    private javax.swing.JButton button1;
    private javax.swing.JButton button2;
    private javax.swing.JButton button3;
    private javax.swing.JButton button5;
    private javax.swing.JButton button6;
    private javax.swing.JButton button7;
    private javax.swing.JButton button8;
    private javax.swing.JButton button9;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton copyButton;
    private javax.swing.JButton divideButton;
    private javax.swing.JButton dotButton;
    private javax.swing.JButton equalButton;
    private javax.swing.JButton multiplyButton;
    private javax.swing.JButton pasteButton;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JButton substractButton;
    // End of variables declaration//GEN-END:variables
}
